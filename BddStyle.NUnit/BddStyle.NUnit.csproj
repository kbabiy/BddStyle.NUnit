<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Version>9.9.9</Version>
    <Authors>Konstantin Babiy and contributors</Authors>
    <Company>none</Company>
    <Description>Tooling to empower BDD-style unit testing conventions. R# snippets for easier usage are available by project URL</Description>
    <PackageLicenseUrl>https://github.com/kbabiy/BddStyle.UnitTesting/blob/master/LICENSE.md</PackageLicenseUrl>
    <PackageProjectUrl>https://raw.githubusercontent.com/kbabiy/BddStyle.UnitTesting/master/BddStyle.NUnit/snippets/BddStyle.NUnit.ResharperTemplates.DotSettings</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/kbabiy/BddStyle.UnitTesting/master/logo.png</PackageIconUrl>
    <PackageTags>NUnit BDD GWT</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NUnit" Version="3.11.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\BddStyle.Common\BddStyle.Common.csproj" PrivateAssets="all" />
  </ItemGroup>
      
    <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <!-- include PDBs in the NuGet package -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>